Terminals unused in grammar

   MK_DOT
   ERROR


State 220 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   11              | ID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   12              | ID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   13 param_list: param_list MK_COMMA param
   14           | param

   15 param: type ID
   16      | type ID dim_fn
   17      | ID ID
   18      | ID ID dim_fn

   19 dim_fn: MK_LB expr_null MK_RB
   20       | dim_fn MK_LB expr MK_RB

   21 expr_null: expr
   22          | %empty

   23 block: decl_list stmt_list
   24      | stmt_list
   25      | decl_list
   26      | %empty

   27 decl_list: decl_list decl
   28          | decl

   29 decl: type_decl
   30     | var_decl

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON
   32          | TYPEDEF VOID id_list MK_SEMICOLON
   33          | TYPEDEF ID id_list MK_SEMICOLON

   34 var_decl: type init_id_list MK_SEMICOLON
   35         | ID init_id_list MK_SEMICOLON

   36 type: INT
   37     | FLOAT

   38 id_list: ID
   39        | id_list MK_COMMA ID
   40        | id_list MK_COMMA ID dim_decl
   41        | ID dim_decl

   42 dim_decl: MK_LB cexpr MK_RB
   43         | dim_decl MK_LB cexpr MK_RB

   44 cexpr: cexpr OP_PLUS mcexpr
   45      | cexpr OP_MINUS mcexpr
   46      | mcexpr

   47 mcexpr: mcexpr OP_TIMES cfactor
   48       | mcexpr OP_DIVIDE cfactor
   49       | cfactor

   50 cfactor: CONST
   51        | MK_LPAREN cexpr MK_RPAREN

   52 init_id_list: init_id
   53             | init_id_list MK_COMMA init_id

   54 init_id: ID
   55        | ID dim_decl
   56        | ID OP_ASSIGN relop_expr

   57 stmt_list: stmt_list stmt
   58          | stmt

   59 stmt: MK_LBRACE block MK_RBRACE
   60     | WHILE MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt
   61     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   62     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   63     | IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt
   64     | IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt ELSE stmt
   65     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   66     | MK_SEMICOLON
   67     | RETURN MK_SEMICOLON
   68     | RETURN relop_expr MK_SEMICOLON

   69 assign_expr_list: nonempty_assign_expr_list
   70                 | %empty

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   72                          | assign_expr

   73 assign_expr: ID OP_ASSIGN relop_expr
   74            | relop_expr

   75 relop_expr: relop_term
   76           | relop_expr OP_OR relop_term

   77 relop_term: relop_factor
   78           | relop_term OP_AND relop_factor

   79 relop_factor: expr
   80             | expr rel_op expr

   81 rel_op: OP_EQ
   82       | OP_GE
   83       | OP_LE
   84       | OP_NE
   85       | OP_GT
   86       | OP_LT

   87 relop_expr_list: nonempty_relop_expr_list
   88                | %empty

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   90                         | relop_expr

   91 expr: expr add_op term
   92     | term

   93 add_op: OP_PLUS
   94       | OP_MINUS

   95 term: term mul_op factor
   96     | factor

   97 mul_op: OP_TIMES
   98       | OP_DIVIDE

   99 factor: MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
  102       | CONST
  103       | OP_MINUS CONST
  104       | OP_NOT CONST
  105       | ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  108       | var_ref
  109       | OP_MINUS var_ref
  110       | OP_NOT var_ref

  111 var_ref: ID
  112        | ID dim_list

  113 dim_list: dim_list MK_LB expr MK_RB
  114         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 11 12 15 16 17 18 33 35 38 39 40 41 54 55 56 65 73
    105 106 107 111 112
CONST (259) 50 102 103 104
VOID (260) 8 10 32
INT (261) 36
FLOAT (262) 37
IF (263) 63 64
ELSE (264) 64
WHILE (265) 60
FOR (266) 61
TYPEDEF (267) 31 32 33
OP_ASSIGN (268) 56 62 73
OP_OR (269) 76
OP_AND (270) 78
OP_NOT (271) 101 104 107 110
OP_EQ (272) 81
OP_NE (273) 84
OP_GT (274) 85
OP_LT (275) 86
OP_GE (276) 82
OP_LE (277) 83
OP_PLUS (278) 44 93
OP_MINUS (279) 45 94 100 103 106 109
OP_TIMES (280) 47 97
OP_DIVIDE (281) 48 98
MK_LB (282) 19 20 42 43 113 114
MK_RB (283) 19 20 42 43 113 114
MK_LPAREN (284) 7 8 9 10 11 12 51 60 61 63 64 65 99 100 101 105 106
    107
MK_RPAREN (285) 7 8 9 10 11 12 51 60 61 63 64 65 99 100 101 105 106
    107
MK_LBRACE (286) 7 8 9 10 11 12 59
MK_RBRACE (287) 7 8 9 10 11 12 59
MK_COMMA (288) 13 39 40 53 71 89
MK_SEMICOLON (289) 31 32 33 34 35 61 62 65 66 67 68
MK_DOT (290)
ERROR (291)
RETURN (292) 67 68


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10 11 12, on right: 5 6
param_list (43)
    on left: 13 14, on right: 7 8 11 13
param (44)
    on left: 15 16 17 18, on right: 13 14
dim_fn (45)
    on left: 19 20, on right: 16 18 20
expr_null (46)
    on left: 21 22, on right: 19
block (47)
    on left: 23 24 25 26, on right: 7 8 9 10 11 12 59
decl_list (48)
    on left: 27 28, on right: 5 23 25 27
decl (49)
    on left: 29 30, on right: 27 28
type_decl (50)
    on left: 31 32 33, on right: 29
var_decl (51)
    on left: 34 35, on right: 30
type (52)
    on left: 36 37, on right: 7 9 15 16 31 34
id_list (53)
    on left: 38 39 40 41, on right: 31 32 33 39 40
dim_decl (54)
    on left: 42 43, on right: 40 41 43 55
cexpr (55)
    on left: 44 45 46, on right: 42 43 44 45 51
mcexpr (56)
    on left: 47 48 49, on right: 44 45 46 47 48
cfactor (57)
    on left: 50 51, on right: 47 48 49
init_id_list (58)
    on left: 52 53, on right: 34 35 53
init_id (59)
    on left: 54 55 56, on right: 52 53
stmt_list (60)
    on left: 57 58, on right: 23 24 57
stmt (61)
    on left: 59 60 61 62 63 64 65 66 67 68, on right: 57 58 60 61 63
    64
assign_expr_list (62)
    on left: 69 70, on right: 61
nonempty_assign_expr_list (63)
    on left: 71 72, on right: 69 71
assign_expr (64)
    on left: 73 74, on right: 71 72
relop_expr (65)
    on left: 75 76, on right: 56 62 68 73 74 76 89 90 99 100 101
relop_term (66)
    on left: 77 78, on right: 75 76 78
relop_factor (67)
    on left: 79 80, on right: 77 78
rel_op (68)
    on left: 81 82 83 84 85 86, on right: 80
relop_expr_list (69)
    on left: 87 88, on right: 61 65 105 106 107
nonempty_relop_expr_list (70)
    on left: 89 90, on right: 60 63 64 87 89
expr (71)
    on left: 91 92, on right: 20 21 79 80 91 113 114
add_op (72)
    on left: 93 94, on right: 91
term (73)
    on left: 95 96, on right: 91 92 95
mul_op (74)
    on left: 97 98, on right: 95
factor (75)
    on left: 99 100 101 102 103 104 105 106 107 108 109 110, on right:
    95 96
var_ref (76)
    on left: 111 112, on right: 62 108 109 110
dim_list (77)
    on left: 113 114, on right: 112 113


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   11 function_decl: ID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   12              | ID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   35 var_decl: ID . init_id_list MK_SEMICOLON

    ID  shift, and go to state 15

    init_id_list  go to state 16
    init_id       go to state 17


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 18


State 3

   36 type: INT .

    $default  reduce using rule 36 (type)


State 4

   37 type: FLOAT .

    $default  reduce using rule 37 (type)


State 5

   31 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   32          | TYPEDEF . VOID id_list MK_SEMICOLON
   33          | TYPEDEF . ID id_list MK_SEMICOLON

    ID     shift, and go to state 19
    VOID   shift, and go to state 20
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 21


State 6

    0 $accept: program . $end

    $end  shift, and go to state 22


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 23
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   27 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 24
    decl           go to state 25
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   28 decl_list: decl .

    $default  reduce using rule 28 (decl_list)


State 12

   29 decl: type_decl .

    $default  reduce using rule 29 (decl)


State 13

   30 decl: var_decl .

    $default  reduce using rule 30 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   34 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 26

    init_id_list  go to state 27
    init_id       go to state 17


State 15

   11 function_decl: ID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   12              | ID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   54 init_id: ID .
   55        | ID . dim_decl
   56        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 28
    MK_LB      shift, and go to state 29
    MK_LPAREN  shift, and go to state 30

    $default  reduce using rule 54 (init_id)

    dim_decl  go to state 31


State 16

   35 var_decl: ID init_id_list . MK_SEMICOLON
   53 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 32
    MK_SEMICOLON  shift, and go to state 33


State 17

   52 init_id_list: init_id .

    $default  reduce using rule 52 (init_id_list)


State 18

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 34


State 19

   33 type_decl: TYPEDEF ID . id_list MK_SEMICOLON

    ID  shift, and go to state 35

    id_list  go to state 36


State 20

   32 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 35

    id_list  go to state 37


State 21

   31 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 35

    id_list  go to state 38


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 24

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 25

   27 decl_list: decl_list decl .

    $default  reduce using rule 27 (decl_list)


State 26

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   54 init_id: ID .
   55        | ID . dim_decl
   56        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 28
    MK_LB      shift, and go to state 29
    MK_LPAREN  shift, and go to state 39

    $default  reduce using rule 54 (init_id)

    dim_decl  go to state 31


State 27

   34 var_decl: type init_id_list . MK_SEMICOLON
   53 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 32
    MK_SEMICOLON  shift, and go to state 40


State 28

   56 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 46
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 29

   42 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    cexpr    go to state 55
    mcexpr   go to state 56
    cfactor  go to state 57


State 30

   11 function_decl: ID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   12              | ID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 58
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 59

    param_list  go to state 60
    param       go to state 61
    type        go to state 62


State 31

   43 dim_decl: dim_decl . MK_LB cexpr MK_RB
   55 init_id: ID dim_decl .

    MK_LB  shift, and go to state 63

    $default  reduce using rule 55 (init_id)


State 32

   53 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 64

    init_id  go to state 65


State 33

   35 var_decl: ID init_id_list MK_SEMICOLON .

    $default  reduce using rule 35 (var_decl)


State 34

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 58
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 66

    param_list  go to state 67
    param       go to state 61
    type        go to state 62


State 35

   38 id_list: ID .
   41        | ID . dim_decl

    MK_LB  shift, and go to state 29

    $default  reduce using rule 38 (id_list)

    dim_decl  go to state 68


State 36

   33 type_decl: TYPEDEF ID id_list . MK_SEMICOLON
   39 id_list: id_list . MK_COMMA ID
   40        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 69
    MK_SEMICOLON  shift, and go to state 70


State 37

   32 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   39 id_list: id_list . MK_COMMA ID
   40        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 69
    MK_SEMICOLON  shift, and go to state 71


State 38

   31 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   39 id_list: id_list . MK_COMMA ID
   40        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 69
    MK_SEMICOLON  shift, and go to state 72


State 39

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 58
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 73

    param_list  go to state 74
    param       go to state 61
    type        go to state 62


State 40

   34 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 34 (var_decl)


State 41

  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 76

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 77


State 42

  102 factor: CONST .

    $default  reduce using rule 102 (factor)


State 43

  101 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  104       | OP_NOT . CONST
  107       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  110       | OP_NOT . var_ref

    ID         shift, and go to state 78
    CONST      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    var_ref  go to state 81


State 44

  100 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  103       | OP_MINUS . CONST
  106       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  109       | OP_MINUS . var_ref

    ID         shift, and go to state 82
    CONST      shift, and go to state 83
    MK_LPAREN  shift, and go to state 84

    var_ref  go to state 85


State 45

   99 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 86
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 46

   56 init_id: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 56 (init_id)


State 47

   75 relop_expr: relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 75 (relop_expr)


State 48

   77 relop_term: relop_factor .

    $default  reduce using rule 77 (relop_term)


State 49

   79 relop_factor: expr .
   80             | expr . rel_op expr
   91 expr: expr . add_op term

    OP_EQ     shift, and go to state 89
    OP_NE     shift, and go to state 90
    OP_GT     shift, and go to state 91
    OP_LT     shift, and go to state 92
    OP_GE     shift, and go to state 93
    OP_LE     shift, and go to state 94
    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 79 (relop_factor)

    rel_op  go to state 97
    add_op  go to state 98


State 50

   92 expr: term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 92 (expr)

    mul_op  go to state 101


State 51

   96 term: factor .

    $default  reduce using rule 96 (term)


State 52

  108 factor: var_ref .

    $default  reduce using rule 108 (factor)


State 53

   50 cfactor: CONST .

    $default  reduce using rule 50 (cfactor)


State 54

   51 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    cexpr    go to state 102
    mcexpr   go to state 56
    cfactor  go to state 57


State 55

   42 dim_decl: MK_LB cexpr . MK_RB
   44 cexpr: cexpr . OP_PLUS mcexpr
   45      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 103
    OP_MINUS  shift, and go to state 104
    MK_RB     shift, and go to state 105


State 56

   46 cexpr: mcexpr .
   47 mcexpr: mcexpr . OP_TIMES cfactor
   48       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 106
    OP_DIVIDE  shift, and go to state 107

    $default  reduce using rule 46 (cexpr)


State 57

   49 mcexpr: cfactor .

    $default  reduce using rule 49 (mcexpr)


State 58

   17 param: ID . ID
   18      | ID . ID dim_fn

    ID  shift, and go to state 108


State 59

   12 function_decl: ID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 109


State 60

   11 function_decl: ID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 110
    MK_COMMA   shift, and go to state 111


State 61

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 62

   15 param: type . ID
   16      | type . ID dim_fn

    ID  shift, and go to state 112


State 63

   43 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    cexpr    go to state 113
    mcexpr   go to state 56
    cfactor  go to state 57


State 64

   54 init_id: ID .
   55        | ID . dim_decl
   56        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 28
    MK_LB      shift, and go to state 29

    $default  reduce using rule 54 (init_id)

    dim_decl  go to state 31


State 65

   53 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 53 (init_id_list)


State 66

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 114


State 67

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 115
    MK_COMMA   shift, and go to state 111


State 68

   41 id_list: ID dim_decl .
   43 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 41 (id_list)


State 69

   39 id_list: id_list MK_COMMA . ID
   40        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 116


State 70

   33 type_decl: TYPEDEF ID id_list MK_SEMICOLON .

    $default  reduce using rule 33 (type_decl)


State 71

   32 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 32 (type_decl)


State 72

   31 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 31 (type_decl)


State 73

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 117


State 74

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   13 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 118
    MK_COMMA   shift, and go to state 111


State 75

  114 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    expr     go to state 119
    term     go to state 50
    factor   go to state 51
    var_ref  go to state 52


State 76

  105 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    relop_expr_list           go to state 121
    nonempty_relop_expr_list  go to state 122
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 77

  112 var_ref: ID dim_list .
  113 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 123

    $default  reduce using rule 112 (var_ref)


State 78

  107 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 124

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 77


State 79

  104 factor: OP_NOT CONST .

    $default  reduce using rule 104 (factor)


State 80

  101 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 125
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 81

  110 factor: OP_NOT var_ref .

    $default  reduce using rule 110 (factor)


State 82

  106 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 126

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 77


State 83

  103 factor: OP_MINUS CONST .

    $default  reduce using rule 103 (factor)


State 84

  100 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 127
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 85

  109 factor: OP_MINUS var_ref .

    $default  reduce using rule 109 (factor)


State 86

   76 relop_expr: relop_expr . OP_OR relop_term
   99 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 128


State 87

   76 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_term    go to state 129
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 88

   78 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_factor  go to state 130
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 89

   81 rel_op: OP_EQ .

    $default  reduce using rule 81 (rel_op)


State 90

   84 rel_op: OP_NE .

    $default  reduce using rule 84 (rel_op)


State 91

   85 rel_op: OP_GT .

    $default  reduce using rule 85 (rel_op)


State 92

   86 rel_op: OP_LT .

    $default  reduce using rule 86 (rel_op)


State 93

   82 rel_op: OP_GE .

    $default  reduce using rule 82 (rel_op)


State 94

   83 rel_op: OP_LE .

    $default  reduce using rule 83 (rel_op)


State 95

   93 add_op: OP_PLUS .

    $default  reduce using rule 93 (add_op)


State 96

   94 add_op: OP_MINUS .

    $default  reduce using rule 94 (add_op)


State 97

   80 relop_factor: expr rel_op . expr

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    expr     go to state 131
    term     go to state 50
    factor   go to state 51
    var_ref  go to state 52


State 98

   91 expr: expr add_op . term

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    term     go to state 132
    factor   go to state 51
    var_ref  go to state 52


State 99

   97 mul_op: OP_TIMES .

    $default  reduce using rule 97 (mul_op)


State 100

   98 mul_op: OP_DIVIDE .

    $default  reduce using rule 98 (mul_op)


State 101

   95 term: term mul_op . factor

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    factor   go to state 133
    var_ref  go to state 52


State 102

   44 cexpr: cexpr . OP_PLUS mcexpr
   45      | cexpr . OP_MINUS mcexpr
   51 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 103
    OP_MINUS   shift, and go to state 104
    MK_RPAREN  shift, and go to state 134


State 103

   44 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    mcexpr   go to state 135
    cfactor  go to state 57


State 104

   45 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    mcexpr   go to state 136
    cfactor  go to state 57


State 105

   42 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 42 (dim_decl)


State 106

   47 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    cfactor  go to state 137


State 107

   48 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 53
    MK_LPAREN  shift, and go to state 54

    cfactor  go to state 138


State 108

   17 param: ID ID .
   18      | ID ID . dim_fn

    MK_LB  shift, and go to state 139

    $default  reduce using rule 17 (param)

    dim_fn  go to state 140


State 109

   12 function_decl: ID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 148
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 110

   11 function_decl: ID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 154


State 111

   13 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 58
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 155
    type   go to state 62


State 112

   15 param: type ID .
   16      | type ID . dim_fn

    MK_LB  shift, and go to state 139

    $default  reduce using rule 15 (param)

    dim_fn  go to state 156


State 113

   43 dim_decl: dim_decl MK_LB cexpr . MK_RB
   44 cexpr: cexpr . OP_PLUS mcexpr
   45      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 103
    OP_MINUS  shift, and go to state 104
    MK_RB     shift, and go to state 157


State 114

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 158
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 115

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 159


State 116

   39 id_list: id_list MK_COMMA ID .
   40        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 29

    $default  reduce using rule 39 (id_list)

    dim_decl  go to state 160


State 117

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 161
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 118

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 162


State 119

   91 expr: expr . add_op term
  114 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 163

    add_op  go to state 98


State 120

   76 relop_expr: relop_expr . OP_OR relop_term
   90 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 90 (nonempty_relop_expr_list)


State 121

  105 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 164


State 122

   87 relop_expr_list: nonempty_relop_expr_list .
   89 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 165

    $default  reduce using rule 87 (relop_expr_list)


State 123

  113 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    expr     go to state 166
    term     go to state 50
    factor   go to state 51
    var_ref  go to state 52


State 124

  107 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    relop_expr_list           go to state 167
    nonempty_relop_expr_list  go to state 122
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 125

   76 relop_expr: relop_expr . OP_OR relop_term
  101 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 168


State 126

  106 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    relop_expr_list           go to state 169
    nonempty_relop_expr_list  go to state 122
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 127

   76 relop_expr: relop_expr . OP_OR relop_term
  100 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 170


State 128

   99 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 99 (factor)


State 129

   76 relop_expr: relop_expr OP_OR relop_term .
   78 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 76 (relop_expr)


State 130

   78 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 78 (relop_term)


State 131

   80 relop_factor: expr rel_op expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 80 (relop_factor)

    add_op  go to state 98


State 132

   91 expr: expr add_op term .
   95 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 91 (expr)

    mul_op  go to state 101


State 133

   95 term: term mul_op factor .

    $default  reduce using rule 95 (term)


State 134

   51 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 51 (cfactor)


State 135

   44 cexpr: cexpr OP_PLUS mcexpr .
   47 mcexpr: mcexpr . OP_TIMES cfactor
   48       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 106
    OP_DIVIDE  shift, and go to state 107

    $default  reduce using rule 44 (cexpr)


State 136

   45 cexpr: cexpr OP_MINUS mcexpr .
   47 mcexpr: mcexpr . OP_TIMES cfactor
   48       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 106
    OP_DIVIDE  shift, and go to state 107

    $default  reduce using rule 45 (cexpr)


State 137

   47 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 47 (mcexpr)


State 138

   48 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 48 (mcexpr)


State 139

   19 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 22 (expr_null)

    expr_null  go to state 171
    expr       go to state 172
    term       go to state 50
    factor     go to state 51
    var_ref    go to state 52


State 140

   18 param: ID ID dim_fn .
   20 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 173

    $default  reduce using rule 18 (param)


State 141

   35 var_decl: ID . init_id_list MK_SEMICOLON
   65 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  111 var_ref: ID .
  112        | ID . dim_list

    ID         shift, and go to state 64
    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 174

    $default  reduce using rule 111 (var_ref)

    init_id_list  go to state 16
    init_id       go to state 17
    dim_list      go to state 77


State 142

   63 stmt: IF . MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt
   64     | IF . MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 175


State 143

   60 stmt: WHILE . MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 176


State 144

   61 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 177


State 145

   59 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 178
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 146

   66 stmt: MK_SEMICOLON .

    $default  reduce using rule 66 (stmt)


State 147

   67 stmt: RETURN . MK_SEMICOLON
   68     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 41
    CONST         shift, and go to state 42
    OP_NOT        shift, and go to state 43
    OP_MINUS      shift, and go to state 44
    MK_LPAREN     shift, and go to state 45
    MK_SEMICOLON  shift, and go to state 179

    relop_expr    go to state 180
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 148

   12 function_decl: ID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 181


State 149

   23 block: decl_list . stmt_list
   25      | decl_list .
   27 decl_list: decl_list . decl

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 25 (block)

    decl       go to state 25
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 182
    stmt       go to state 152
    var_ref    go to state 153


State 150

   34 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 64

    init_id_list  go to state 27
    init_id       go to state 17


State 151

   24 block: stmt_list .
   57 stmt_list: stmt_list . stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 24 (block)

    stmt     go to state 184
    var_ref  go to state 153


State 152

   58 stmt_list: stmt .

    $default  reduce using rule 58 (stmt_list)


State 153

   62 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 185


State 154

   11 function_decl: ID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 186
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 155

   13 param_list: param_list MK_COMMA param .

    $default  reduce using rule 13 (param_list)


State 156

   16 param: type ID dim_fn .
   20 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 173

    $default  reduce using rule 16 (param)


State 157

   43 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 43 (dim_decl)


State 158

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 187


State 159

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 188
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 160

   40 id_list: id_list MK_COMMA ID dim_decl .
   43 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 40 (id_list)


State 161

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 189


State 162

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 141
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 26 (block)

    block      go to state 190
    decl_list  go to state 149
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 150
    stmt_list  go to state 151
    stmt       go to state 152
    var_ref    go to state 153


State 163

  114 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 114 (dim_list)


State 164

  105 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 165

   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 191
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 166

   91 expr: expr . add_op term
  113 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 192

    add_op  go to state 98


State 167

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 193


State 168

  101 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 101 (factor)


State 169

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 194


State 170

  100 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 100 (factor)


State 171

   19 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 195


State 172

   21 expr_null: expr .
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 21 (expr_null)

    add_op  go to state 98


State 173

   20 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    expr     go to state 196
    term     go to state 50
    factor   go to state 51
    var_ref  go to state 52


State 174

   65 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    relop_expr_list           go to state 197
    nonempty_relop_expr_list  go to state 122
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 175

   63 stmt: IF MK_LPAREN . nonempty_relop_expr_list MK_RPAREN stmt
   64     | IF MK_LPAREN . nonempty_relop_expr_list MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    nonempty_relop_expr_list  go to state 198
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 176

   60 stmt: WHILE MK_LPAREN . nonempty_relop_expr_list MK_RPAREN stmt

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    nonempty_relop_expr_list  go to state 199
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 177

   61 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 200
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 70 (assign_expr_list)

    assign_expr_list           go to state 201
    nonempty_assign_expr_list  go to state 202
    assign_expr                go to state 203
    relop_expr                 go to state 204
    relop_term                 go to state 47
    relop_factor               go to state 48
    expr                       go to state 49
    term                       go to state 50
    factor                     go to state 51
    var_ref                    go to state 52


State 178

   59 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 205


State 179

   67 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 67 (stmt)


State 180

   68 stmt: RETURN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 206


State 181

   12 function_decl: ID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 12 (function_decl)


State 182

   23 block: decl_list stmt_list .
   57 stmt_list: stmt_list . stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    $default  reduce using rule 23 (block)

    stmt     go to state 184
    var_ref  go to state 153


State 183

   65 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  111 var_ref: ID .
  112        | ID . dim_list

    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 174

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 77


State 184

   57 stmt_list: stmt_list stmt .

    $default  reduce using rule 57 (stmt_list)


State 185

   62 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 207
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 186

   11 function_decl: ID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 208


State 187

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 188

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 209


State 189

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 190

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 210


State 191

   76 relop_expr: relop_expr . OP_OR relop_term
   89 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 89 (nonempty_relop_expr_list)


State 192

  113 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 113 (dim_list)


State 193

  107 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 107 (factor)


State 194

  106 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 106 (factor)


State 195

   19 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 19 (dim_fn)


State 196

   20 dim_fn: dim_fn MK_LB expr . MK_RB
   91 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 211

    add_op  go to state 98


State 197

   65 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 212


State 198

   63 stmt: IF MK_LPAREN nonempty_relop_expr_list . MK_RPAREN stmt
   64     | IF MK_LPAREN nonempty_relop_expr_list . MK_RPAREN stmt ELSE stmt
   89 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_RPAREN  shift, and go to state 213
    MK_COMMA   shift, and go to state 165


State 199

   60 stmt: WHILE MK_LPAREN nonempty_relop_expr_list . MK_RPAREN stmt
   89 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_RPAREN  shift, and go to state 214
    MK_COMMA   shift, and go to state 165


State 200

   73 assign_expr: ID . OP_ASSIGN relop_expr
  105 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  111 var_ref: ID .
  112        | ID . dim_list

    OP_ASSIGN  shift, and go to state 215
    MK_LB      shift, and go to state 75
    MK_LPAREN  shift, and go to state 76

    $default  reduce using rule 111 (var_ref)

    dim_list  go to state 77


State 201

   61 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 216


State 202

   69 assign_expr_list: nonempty_assign_expr_list .
   71 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 217

    $default  reduce using rule 69 (assign_expr_list)


State 203

   72 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 72 (nonempty_assign_expr_list)


State 204

   74 assign_expr: relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 74 (assign_expr)


State 205

   59 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 59 (stmt)


State 206

   68 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 68 (stmt)


State 207

   62 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 218


State 208

   11 function_decl: ID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 11 (function_decl)


State 209

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 210

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 211

   20 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 20 (dim_fn)


State 212

   65 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 219


State 213

   63 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN . stmt
   64     | IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    stmt     go to state 220
    var_ref  go to state 153


State 214

   60 stmt: WHILE MK_LPAREN nonempty_relop_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    stmt     go to state 221
    var_ref  go to state 153


State 215

   73 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    relop_expr    go to state 222
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 216

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 41
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 88 (relop_expr_list)

    relop_expr                go to state 120
    relop_term                go to state 47
    relop_factor              go to state 48
    relop_expr_list           go to state 223
    nonempty_relop_expr_list  go to state 122
    expr                      go to state 49
    term                      go to state 50
    factor                    go to state 51
    var_ref                   go to state 52


State 217

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 200
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    assign_expr   go to state 224
    relop_expr    go to state 204
    relop_term    go to state 47
    relop_factor  go to state 48
    expr          go to state 49
    term          go to state 50
    factor        go to state 51
    var_ref       go to state 52


State 218

   62 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 219

   65 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


State 220

   63 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt .
   64     | IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 225

    ELSE      [reduce using rule 63 (stmt)]
    $default  reduce using rule 63 (stmt)


State 221

   60 stmt: WHILE MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt .

    $default  reduce using rule 60 (stmt)


State 222

   73 assign_expr: ID OP_ASSIGN relop_expr .
   76 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 73 (assign_expr)


State 223

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 226


State 224

   71 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 71 (nonempty_assign_expr_list)


State 225

   64 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    stmt     go to state 227
    var_ref  go to state 153


State 226

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 200
    CONST      shift, and go to state 42
    OP_NOT     shift, and go to state 43
    OP_MINUS   shift, and go to state 44
    MK_LPAREN  shift, and go to state 45

    $default  reduce using rule 70 (assign_expr_list)

    assign_expr_list           go to state 228
    nonempty_assign_expr_list  go to state 202
    assign_expr                go to state 203
    relop_expr                 go to state 204
    relop_term                 go to state 47
    relop_factor               go to state 48
    expr                       go to state 49
    term                       go to state 50
    factor                     go to state 51
    var_ref                    go to state 52


State 227

   64 stmt: IF MK_LPAREN nonempty_relop_expr_list MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 64 (stmt)


State 228

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 229


State 229

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 183
    IF            shift, and go to state 142
    WHILE         shift, and go to state 143
    FOR           shift, and go to state 144
    MK_LBRACE     shift, and go to state 145
    MK_SEMICOLON  shift, and go to state 146
    RETURN        shift, and go to state 147

    stmt     go to state 230
    var_ref  go to state 153


State 230

   61 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 61 (stmt)
